{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 ComicSansMS;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red38\green38\blue38;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww19420\viewh14380\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
This homework is intended to be a review to solidify your understanding of some Object Oriented Programming concepts. Although some of these concepts are high-level, they are important to the language (Java) that we work in as Android developers, and understanding these concepts will help you with interview question preparation.\
In your own words, come up with answers to the following, using diagrams or pictures also if it helps you to describe the concept.\
\

\b \ul 1. What are the 4 main characteristics of OOP, and what do they mean? 
\b0 \ulnone \uc0\u8232 
\b \ul i. For each of the 4 OOP concepts, explain an example where the concept could apply practically to Android development.\uc0\u8232 ii. Are there any tradeoffs between these concepts in your opinion? If so, what are they?
\b0 \ulnone \
The four main characteristics of OOP are: abstraction, polymorphism, inheritance, and encapsulation.\
Abstraction is a way of removing details and only seeing the information that you want to.  Abstracts have some functionality. You cannot extend from more than 1 abstract class. Also, in an abstract class, you cannot create an instance of that class.  A polymorphism occurs when an object has multiple inheritances. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object.Inheritance is used when you want to depend on another class. It\'92s almost like creating a blueprint for a table. You can use subclasses to make other \'93tables\'94 that inherit certain characteristics, but you can make other tables: coffee tables, kitchen tables, etc. Encapsulation occurs when each object is isolated. We can use encapsulation to make all the data members/inner details of the class private. You can control the way the data is accessed or modified. You can also increase reusability. When applying these four characteristics, you need to think about who should have access to the information/code.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 2. \expnd0\expndtw0\kerning0
Abstract classes and Interfaces are useful in Java and in Android development. Explain an example of an Interface we use often in Android. \uc0\u8232 i. What is the difference between an Abstract Class and an Interface? If you don't know, that's alright - look it up and rephrase in your own words. \
Abstract classes have some functionality. It cannot be instantiated and you can extend from only 1 abstract class. Although it is abstract, it can contain abstract and non abstract methods. Finally, it can be a subclass of an abstract or non abstract class. Interfaces are used for full abstractions and you can have as many interfaces as you would like. You will need to \ul implement\ulnone  an interface. An interface is declared using the keyword interface, followed by the name of the interface and a set of method declarations.\
\pard\pardeftab720\partightenfactor0
\ls1\ilvl0\cf2 \uc0\u8232 ii. How do Interfaces and Abstract Classes relate to polymorphism? Can you give an example of this from lessons or labs that we've talked about?\
Polymorphism happens when an object has multiple inheritances. An example would be :\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\ls2\ilvl0
\b \cf2 \kerning1\expnd0\expndtw0 public class 
\b0 Secretary 
\b extends 
\b0 Employee 
\b implements 
\b0 iOperateTV\{\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 3. We often use private member variables when creating classes. Why is it good to have private member variables instead of public? How do we grant access to such variables usually?  Public variables are exposed to the class, package, subclass, and anyone who would like to use your code. For variables, this means code outside of our class will be able to assign to and from our member variable.Private variables can only be seen within the class. When writing your code, think about who should have information to it.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 4. \expnd0\expndtw0\kerning0
For further reading, we'd like you to check out Java 8 Pocket Guide Chapter 5: Classes and Objects, all the way up through the Interfaces section.}